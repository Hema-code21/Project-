import React, { useState } from 'react';

function RegistrationForm() {
  const [form, setForm] = useState({
    name: '',
    email: '',
    password: '',
    confirmPassword: ''
  });
  const [errors, setErrors] = useState({});
  const [submitted, setSubmitted] = useState(false);

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const validate = () => {
    let newErrors = {};
    if (!form.name) newErrors.name = 'Name is required';
    if (!form.email) newErrors.email = 'Email is required';
    else if (!/\S+@\S+\.\S+/.test(form.email)) newErrors.email = 'Email is invalid';
    if (!form.password) newErrors.password = 'Password is required';
    else if (form.password.length < 6) newErrors.password = 'Password must be at least 6 characters';
    if (form.confirmPassword !== form.password) newErrors.confirmPassword = 'Passwords do not match';
    return newErrors;
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    const validationErrors = validate();
    setErrors(validationErrors);
    if (Object.keys(validationErrors).length === 0) {
      setSubmitted(true);
      // You can add API call here
      console.log('Form submitted', form);
    }
  };

  return (
    <form onSubmit={handleSubmit} style={{maxWidth:400,margin:'auto'}}>
      <h2>Registration Form</h2>
      <div>
        <label>Name:</label>
        <input type="text" name="name" value={form.name} onChange={handleChange} />
        {errors.name && <div style={{color:'red'}}>{errors.name}</div>}
      </div>
      <div>
        <label>Email:</label>
        <input type="email" name="email" value={form.email} onChange={handleChange} />
        {errors.email && <div style={{color:'red'}}>{errors.email}</div>}
      </div>
      <div>
        <label>Password:</label>
        <input type="password" name="password" value={form.password} onChange={handleChange} />
        {errors.password && <div style={{color:'red'}}>{errors.password}</div>}
      </div>
      <div>
        <label>Confirm Password:</label>
        <input type="password" name="confirmPassword" value={form.confirmPassword} onChange={handleChange} />
        {errors.confirmPassword && <div style={{color:'red'}}>{errors.confirmPassword}</div>}
      </div>
      <button type="submit">Register</button>
      {submitted && <div style={{color:'green'}}>Registration successful!</div>}
    </form>
  );
}

export default RegistrationForm;
